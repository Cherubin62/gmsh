dnl "$Id: configure.in,v 1.23 2003-02-17 16:32:37 geuzaine Exp $"
dnl
dnl Copyright (C) 1997 - 2003 C. Geuzaine, J.-F. Remacle
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
dnl USA.
dnl 
dnl Please report all bugs and problems to "gmsh@geuz.org".

dnl Process this file with autoconf to produce the configure script.

dnl Check that this is the gmsh source tree
AC_INIT(Parser/Gmsh.y)

dnl Parse '--with' command-line options
AC_ARG_WITH(gsl-prefix,
            AC_HELP_STRING([--with-gsl-prefix=PFX],
                           [prefix where GSL is installed]),
            [GSL_PREFIX=$withval],[GSL_PREFIX="$GSL_DIR"])
AC_ARG_WITH(fltk-prefix,
            AC_HELP_STRING([--with-fltk-prefix=PFX],
                           [prefix where FLTK is installed]),
            [FLTK_PREFIX=$withval],[FLTK_PREFIX="$FLTK_DIR"])
AC_ARG_WITH(jpeg-prefix,
            AC_HELP_STRING([--with-jpeg-prefix=PFX],
                           [prefix where the JPEG code is installed]),
            [JPEG_PREFIX=$withval],[JPEG_PREFIX="$JPEG_DIR"])

dnl Parse '--enable' command line options
AC_ARG_ENABLE(gui,
              AC_HELP_STRING([--enable-gui],
                             [build the graphical user interface (default=yes)]))
AC_ARG_ENABLE(parallel,
              AC_HELP_STRING([--enable-parallel],
                             [enable parallel version (default=no)]))
AC_ARG_ENABLE(triangle,
              AC_HELP_STRING([--enable-triangle],
                             [compile Triangle if available (default=yes)]))

dnl Get the operating system and version number
UNAME=`uname`
UVERSION=`uname -r | sed -e '1,$s/[[^0-9]]//g'`
if test "x${UNAME}" = "xIRIX64"; then
  UNAME="IRIX"
fi
AC_SUBST(UNAME)

dnl Check for default compilers
AC_PROG_CC
AC_PROG_CXX

dnl Check for various programs
AC_PROG_CPP
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar)

dnl See if we need a .exe extension on executables
AC_EXEEXT

dnl How to build static libraries?
if test "x${AR}" = "x:"; then
  AC_MSG_ERROR(Could not find the library archiver, aborting.)
fi
AR="${AR} ruvs"

dnl Set default subdirectories and libraries
GMSH_DIRS="Common DataStr Geo Mesh Numeric Parallel Parser Plugin"

dnl Choose blackbox or GUI version
if test "x$enable_gui" != "xno"; then

  GMSH_DIRS="${GMSH_DIRS} Graphics Fltk"
  GMSH_LIBS="-Llib -lGmshFltk -lGmshParser -lGmshGraphics -lGmshMesh -lGmshGeo -lGmshNumeric -lGmshCommon -lGmshDataStr -lGmshPlugin -lGmshParallel"
  VERSION_FLAGS="-DHAVE_FLTK"

  if test "x${FLTK_PREFIX}" != "x" ; then
    AC_PATH_PROG(FLTKCONFIG,fltk-config,"",${FLTK_PREFIX})
    dnl Find the libs/includes even if fltk is _not_ properly installed (ugly hack!)
    GUI_LIBS="-L${FLTK_PREFIX}/lib"
    GUI_INCLUDE="-I${FLTK_PREFIX}"
  else
    AC_PATH_PROG(FLTKCONFIG,fltk-config)
  fi
  if test "x$FLTKCONFIG" = "x"; then
    AC_MSG_ERROR(Could not find fltk-config. Try --with-fltk-prefix?)
  fi
  GUI_LIBS="${GUI_LIBS} `$FLTKCONFIG --use-gl --use-images --ldflags`"
  GUI_INCLUDE="${GUI_INCLUDE} `$FLTKCONFIG --use-gl --use-images --cxxflags`"

  dnl Check if libjpeg is available (in case fltk didn't find it) to enable/disable gl2jpg
  if test "x${JPEG_PREFIX}" = "x"; then
    AC_CHECK_HEADER(jpeglib.h,
      AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
                   VERSION_FLAGS="${VERSION_FLAGS} -DHAVE_LIBJPEG"
                   GUI_LIBS="${GUI_LIBS} -ljpeg"))
  else
    dnl Should work even if the jpeg libs/includes are _not_ properly installed (ugly hack!)
    VERSION_FLAGS="${VERSION_FLAGS} -DHAVE_LIBJPEG"
    GUI_INCLUDE="${GUI_INCLUDE} -I${JPEG_PREFIX} -I${JPEG_PREFIX}/include"
    GUI_LIBS="${GUI_LIBS} -L${JPEG_PREFIX} -L${JPEG_PREFIX}/lib -ljpeg"
  fi 

else

  GMSH_DIRS="${GMSH_DIRS} Box"
  GMSH_LIBS="-Llib -lGmshBox -lGmshParser -lGmshMesh -lGmshGeo -lGmshNumeric -lGmshPlugin -lGmshCommon -lGmshDataStr -lGmshParallel"
  VERSION_FLAGS=""
  GUI_LIBS=""
  GUI_INCLUDE=""

fi

dnl Check if Triangle is installed
AC_CHECK_FILE(./Triangle/triangle.c, HAVE_TRIANGLE="yes", HAVE_TRIANGLE="no")
if test "x${HAVE_TRIANGLE}" = "xyes" -a "x$enable_triangle" != "xno"; then
  GMSH_DIRS="${GMSH_DIRS} Triangle"
  GMSH_LIBS="${GMSH_LIBS} -lGmshTriangle"
  VERSION_FLAGS="${VERSION_FLAGS} -DHAVE_TRIANGLE"
fi

dnl Check if we should build the parallel version
if test "x$enable_parallel" = "xyes"; then
  VERSION_FLAGS="${VERSION_FLAGS} -DPARALLEL"
fi

AC_SUBST(VERSION_FLAGS)
AC_SUBST(GUI_INCLUDE)

dnl Set default flags, linker and post build action
OPT_FLAGS="${CXXFLAGS}"
OS_FLAGS=""
LINKER="${CXX}"
POSTBUILD=""

dnl Set libs to link against
if test "x$enable_gui" != "xno"; then
  GMSH_LIBS="${GMSH_LIBS} ${GUI_LIBS}"
else
  GMSH_LIBS="${GMSH_LIBS} -lm";
fi

dnl Modify defaults according to OS
case "$UNAME" in

  CYGWIN* | MINGW*)
    LINKER="${LINKER} -Wl,--subsystem,windows -mwindows"
    if test "x$enable_gui" != "xno"; then
      GMSH_LIBS="${GMSH_LIBS} Fltk/Win32Icon.res"
    fi
    ;;

  Darwin*)
    OS_FLAGS="${OS_FLAGS} -D_NO_DLL"
    POSTBUILD="/Developer/Tools/Rez -t APPL -o bin/gmsh Fltk/MacRes.r"
    ;;

  AIX*)
    OS_FLAGS="${OS_FLAGS} -D_BSD -D_NO_DLL"
    ;;

  IRIX*)
    CXX="CC"
    CC="cc"
    OS_FLAGS="${OS_FLAGS} -mips3 -n32" 
    OPT_FLAGS="-O2 -OPT:Olimit=0 -LANG:std"
    AR="CC -mips3 -n32 -ar -o"
    LINKER="CC -O2 -mips3 -n32"
    ;;

  SunOS*)
    OS_FLAGS="${OS_FLAGS} -D_NO_DLL"
    GMSH_LIBS="${GMSH_LIBS} -lsocket -lnsl -ldl"
    ;;

  HP-UX*)
    OS_FLAGS="-D_NO_DLL"
    ;;

esac

dnl Is the machine big or littke endian?
AC_C_BIGENDIAN(OS_FLAGS="${OS_FLAGS} -D_BIG_ENDIAN")

AC_SUBST(OPT_FLAGS)
AC_SUBST(OS_FLAGS)
AC_SUBST(LINKER)
AC_SUBST(GMSH_DIRS)
AC_SUBST(GMSH_LIBS)
AC_SUBST(POSTBUILD)
AC_SUBST(AR)

dnl Check for GSL
if test "x${GSL_PREFIX}" = "x"; then
  LDFLAGS="-lgslcblas"
else
  LDFLAGS="-L${GSL_PREFIX}/lib -lgslcblas"
fi
AC_CHECK_LIB(gsl,gsl_vector_alloc,GSL="yes",GSL="no")
if test "x${GSL_PREFIX}" = "x"; then
  GSL_LIBS="-lgsl -lgslcblas"
else
  GSL_LIBS="-L${GSL_PREFIX}/lib -lgsl -lgslcblas"
  GSL_INCLUDE="-I${GSL_PREFIX}/include"
fi
AC_SUBST(GSL_LIBS)
AC_SUBST(GSL_INCLUDE)

dnl Check for header files
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h sys/resource.h)

dnl Write output
AC_OUTPUT(variables)

dnl Print some information
echo "*******************************************************************"
echo "Gmsh is configured for"
echo "- Operating system: $UNAME"
echo "- Version flags: $VERSION_FLAGS"
echo "- OS flags: $OS_FLAGS"
echo "*******************************************************************"

if test "x${HAVE_TRIANGLE}" = "xno"; then
  echo "*******************************************************************"
  echo "If you want to use Jonathan Shewchuk's Triangle as an alternative"
  echo "isotropic 2D mesh generator, please download Triangle from the"
  echo "author's web site at http://www.cs.cmu.edu/~quake/triangle.html,"
  echo "unpack the archive and copy the two files 'triangle.c' and"
  echo "'triangle.h' in the ./Triangle subdirectory. Then run ./configure"
  echo "again."
  echo ""
  echo "Please note that by doing so, you agree to Triangle's licencing"
  echo "requirements stated in ./Triangle/README. (Most notably, you may"
  echo "then only redistribute Gmsh if no compensation is received.)"
  echo "*******************************************************************"
fi

dnl Don't print the warning at the moment, since we don't use the GSL yet
dnl if test "x${GSL}" = "xno"; then
dnl   echo "*******************************************************************"
dnl   echo "Configure could not find the GNU Scientific Library (GSL):"
dnl   echo "- if it is installed in a non-standard location, please run"
dnl   echo "  ./configure again with the --with-gsl-prefix option"
dnl   echo "- if it is not installed on your system, you can download it from"
dnl   echo "  http://sources.redhat.com/gsl/"
dnl   echo "*******************************************************************"
dnl fi
